{"version":3,"file":"static/js/2125.b024a166.chunk.js","mappings":"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","sources":["../../../streamlit/frontend/node_modules/path-browserify/index.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../../../streamlit/frontend/kernel/src/file.ts","../../../streamlit/frontend/kernel/src/requirements.ts","../../../streamlit/frontend/kernel/src/mock.ts","../../../streamlit/frontend/kernel/src/worker.ts","../../../streamlit/frontend/common/src/promise-delegate.ts"],"sourcesContent":["// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import path from \"path-browserify\";\nimport type { PyodideInterface } from \"pyodide\";\n\nfunction ensureParent(pyodide: PyodideInterface, filePath: string): void {\n  const normalized = path.normalize(filePath);\n\n  const dirPath = path.dirname(normalized);\n\n  const dirNames = dirPath.split(\"/\");\n\n  const chDirNames: string[] = [];\n  for (const dirName of dirNames) {\n    chDirNames.push(dirName);\n    const dirPath = chDirNames.join(\"/\");\n\n    if (pyodide.FS.analyzePath(dirPath).exists) {\n      if (pyodide.FS.isDir(dirPath)) {\n        throw new Error(`\"${dirPath}\" already exists and is not a directory.`);\n      }\n      continue;\n    }\n\n    try {\n      pyodide.FS.mkdir(dirPath);\n    } catch (err) {\n      console.error(`Failed to create a directory \"${dirPath}\"`);\n      throw err;\n    }\n  }\n}\n\nexport function writeFileWithParents(\n  pyodide: PyodideInterface,\n  filePath: string,\n  data: string | ArrayBufferView,\n  opts?: Parameters<PyodideInterface[\"FS\"][\"writeFile\"]>[2]\n): void {\n  ensureParent(pyodide, filePath);\n  pyodide.FS.writeFile(filePath, data, opts);\n}\n\nexport function renameWithParents(\n  pyodide: PyodideInterface,\n  oldPath: string,\n  newPath: string\n): void {\n  ensureParent(pyodide, newPath);\n  pyodide.FS.rename(oldPath, newPath);\n}\n","export function verifyRequirements(requirements: string[]) {\n  requirements.forEach((req) => {\n    let url: URL;\n    try {\n      url = new URL(req);\n    } catch {\n      // `req` is not a URL -> OK\n      return;\n    }\n\n    // Ref: The scheme checker in the micropip implementation is https://github.com/pyodide/micropip/blob/v0.1.0/micropip/_compat_in_pyodide.py#L23-L26\n    if (url.protocol === \"emfs:\" || url.protocol === \"file:\") {\n      throw new Error(\n        `\"emfs:\" and \"file:\" protocols are not allowed for the requirement (${req})`\n      );\n    }\n  });\n}\n","import type { PyodideInterface } from \"pyodide\";\n\nexport function mockPyArrow(pyodide: PyodideInterface) {\n  pyodide.runPython(`\nimport micropip\nmicropip.add_mock_package(\n    \"pyarrow\", \"0.0.1\",\n    modules={\n        \"pyarrow\": \"\"\"\n__version__ = '0.0.1'  # TODO: Update when releasing\n\n\nclass Table:\n    @classmethod\n    def from_pandas(*args, **kwargs):\n        raise NotImplementedError(\"stlite is not supporting this method.\")\n\"\"\"\n    }\n)\n`);\n}\n","import type Pyodide from \"pyodide\";\nimport { PromiseDelegate } from \"@stlite/common\";\nimport { writeFileWithParents, renameWithParents } from \"./file\";\nimport { verifyRequirements } from \"./requirements\";\nimport { mockPyArrow } from \"./mock\";\nimport type {\n  WorkerInitialData,\n  OutMessage,\n  InMessage,\n  ReplyMessageHttpResponse,\n} from \"./types\";\n\nlet pyodide: Pyodide.PyodideInterface;\n\nlet httpServer: any;\n\ninterface StliteWorkerContext extends DedicatedWorkerGlobalScope {\n  postMessage(message: OutMessage, transfer: Transferable[]): void;\n  postMessage(message: OutMessage, options?: StructuredSerializeOptions): void;\n}\n\n// Ref: https://v4.webpack.js.org/loaders/worker-loader/#loading-with-worker-loader\nconst ctx = self as StliteWorkerContext;\n\nconst initDataPromiseDelegate = new PromiseDelegate<WorkerInitialData>();\n\nfunction postProgressMessage(message: string): void {\n  ctx.postMessage({\n    type: \"event:progress\",\n    data: {\n      message,\n    },\n  });\n}\n\nasync function initPyodide(\n  pyodideUrl: string,\n  loadPyodideOptions: Parameters<typeof Pyodide.loadPyodide>[0]\n): Promise<Pyodide.PyodideInterface> {\n  // Ref: https://github.com/jupyterlite/pyodide-kernel/blob/v0.1.3/packages/pyodide-kernel/src/kernel.ts#L55\n  const indexUrl = pyodideUrl.slice(0, pyodideUrl.lastIndexOf(\"/\") + 1);\n\n  // Ref: https://github.com/jupyterlite/pyodide-kernel/blob/v0.1.3/packages/pyodide-kernel/src/worker.ts#L40-L54\n  let loadPyodide: typeof Pyodide.loadPyodide;\n  if (pyodideUrl.endsWith(\".mjs\")) {\n    // note: this does not work at all in firefox\n    const pyodideModule: typeof Pyodide = await import(\n      /* webpackIgnore: true */ pyodideUrl\n    );\n    loadPyodide = pyodideModule.loadPyodide;\n  } else {\n    importScripts(pyodideUrl);\n    loadPyodide = (self as any).loadPyodide;\n  }\n  return loadPyodide({ ...loadPyodideOptions, indexURL: indexUrl });\n}\n\nconst DEFAULT_PYODIDE_URL =\n  \"https://cdn.jsdelivr.net/pyodide/v0.24.1/full/pyodide.js\";\n\n/**\n * Load Pyodided and initialize the interpreter.\n *\n * NOTE: This implementation is based on JupyterLite@v0.1.0a16.\n *       Since v0.1.0a17, a wrapper around micropip, piplite, has been introduced\n *       and the importing strategy of pyolite and other packages has been changed.\n *       We might need to catch up it.\n *       https://github.com/jupyterlite/jupyterlite/pull/310\n */\nasync function loadPyodideAndPackages() {\n  const {\n    entrypoint,\n    files,\n    archives,\n    requirements,\n    wheels,\n    mountedSitePackagesSnapshotFilePath,\n    pyodideUrl = DEFAULT_PYODIDE_URL,\n    streamlitConfig,\n    disableLoadingToasts,\n  } = await initDataPromiseDelegate.promise;\n\n  if (!disableLoadingToasts) {\n    postProgressMessage(\"⚙️ Loading Pyodide...\");\n  }\n  console.debug(\"Loading Pyodide\");\n  pyodide = await initPyodide(pyodideUrl, {\n    stdout: console.log,\n    stderr: console.error,\n  });\n  console.debug(\"Loaded Pyodide\");\n\n  // Mount files\n  // postProgressMessage(\"Mounting files.\");\n  console.debug(\"Mounting files.\");\n  await Promise.all(\n    Object.keys(files).map(async (path) => {\n      const file = files[path];\n\n      let data: string | ArrayBufferView;\n      if (\"url\" in file) {\n        console.debug(`Fetch a file from ${file.url}`);\n        data = await fetch(file.url)\n          .then((res) => res.arrayBuffer())\n          .then((buffer) => new Uint8Array(buffer));\n      } else {\n        data = file.data;\n      }\n      const { opts } = files[path];\n\n      console.debug(`Write a file \"${path}\"`);\n      writeFileWithParents(pyodide, path, data, opts);\n    })\n  );\n\n  // Unpack archives\n  // postProgressMessage(\"Unpacking archives.\");\n  console.debug(\"Unpacking archives.\");\n  await Promise.all(\n    archives.map(async (archive) => {\n      let buffer: Parameters<Pyodide.PyodideInterface[\"unpackArchive\"]>[0];\n      if (\"url\" in archive) {\n        console.debug(`Fetch an archive from ${archive.url}`);\n        buffer = await fetch(archive.url).then((res) => res.arrayBuffer());\n      } else {\n        buffer = archive.buffer;\n      }\n      const { format, options } = archive;\n\n      console.debug(`Unpack an archive`, { format, options });\n      pyodide.unpackArchive(buffer, format, options);\n    })\n  );\n\n  if (mountedSitePackagesSnapshotFilePath) {\n    // Restore the site-packages director(y|ies) from the mounted snapshot file.\n    if (!disableLoadingToasts) {\n      postProgressMessage(\"Restoring the snapshot...\");\n    }\n    // console.debug(\"Restoring the snapshot.\");\n\n    await pyodide.runPythonAsync(`import tarfile, shutil, site`);\n\n    // Remove \"site-packages\" directories such as '/lib/python3.10/site-packages'\n    // assuming these directories will be extracted from the snapshot archive.\n    await pyodide.runPythonAsync(`\n      site_packages_dirs = site.getsitepackages()\n      for site_packages in site_packages_dirs:\n          shutil.rmtree(site_packages)\n    `);\n    console.debug(`Unarchive ${mountedSitePackagesSnapshotFilePath}`);\n    await pyodide.runPythonAsync(`\n      with tarfile.open(\"${mountedSitePackagesSnapshotFilePath}\", \"r\") as tar_gz_file:\n          tar_gz_file.extractall(\"/\")\n    `);\n    console.debug(\"Restored the snapshot\");\n\n    // postProgressMessage(\"Mocking some packages.\");\n    console.debug(\"Mock pyarrow\");\n    mockPyArrow(pyodide);\n    console.debug(\"Mocked pyarrow\");\n  } else if (wheels) {\n    if (!disableLoadingToasts) {\n      postProgressMessage(\"🎛 Installing Streamlit...\");\n    }\n    console.debug(\"Loading stlite-server, and streamlit\");\n    await pyodide.loadPackage(\"micropip\");\n    const micropip = pyodide.pyimport(\"micropip\");\n    await micropip.install.callKwargs([wheels.stliteServer], {\n      keep_going: true,\n    });\n    await micropip.install.callKwargs([wheels.streamlit], {\n      keep_going: true,\n    });\n    console.debug(\"Loaded stlite-server, and streamlit\");\n\n    // postProgressMessage(\"Mocking some packages.\");\n    console.debug(\"Mock pyarrow\");\n    mockPyArrow(pyodide);\n    console.debug(\"Mocked pyarrow\");\n  } else {\n    throw new Error(`Neither snapshot nor wheel files are provided.`);\n  }\n\n  if (requirements.length > 0) {\n    if (!disableLoadingToasts) {\n      postProgressMessage(\"📦 Processing dependencies...\");\n    }\n    console.debug(\"Installing the requirements:\", requirements);\n    verifyRequirements(requirements); // Blocks the not allowed wheel URL schemes.\n    await pyodide.loadPackage(\"micropip\");\n    const micropip = pyodide.pyimport(\"micropip\");\n    await micropip.install.callKwargs(requirements, { keep_going: true });\n    console.debug(\"Installed the requirements:\", requirements);\n  }\n\n  // The following code is necessary to avoid errors like  `NameError: name '_imp' is not defined`\n  // at importing installed packages.\n  await pyodide.runPythonAsync(`\n    import importlib\n    importlib.invalidate_caches()\n  `);\n\n  // postProgressMessage(\"Loading streamlit package.\");\n  console.debug(\"Loading the Streamlit package\");\n  // Importing the `streamlit` module takes most of the time,\n  // so we first run this step independently for clearer logs and easy exec-time profiling.\n  // For https://github.com/whitphx/stlite/issues/427\n  await pyodide.runPythonAsync(`\n      import streamlit.runtime\n      import streamlit.web\n  `);\n  console.debug(\"Loaded the Streamlit package\");\n\n  // postProgressMessage(\"Setting up the loggers.\");\n  console.debug(\"Setting the loggers\");\n  // Fix the Streamlit's logger instantiating strategy, which violates the standard and is problematic for us.\n  // See https://github.com/streamlit/streamlit/issues/4742\n  await pyodide.runPythonAsync(`\n      import logging\n      import streamlit.logger\n\n      streamlit.logger.get_logger = logging.getLogger\n      streamlit.logger.setup_formatter = None\n      streamlit.logger.update_formatter = lambda *a, **k: None\n      streamlit.logger.set_log_level = lambda *a, **k: None\n  `);\n  // Then configure the logger.\n  const logCallback = (msg: string) => {\n    if (msg.startsWith(\"CRITICAL\") || msg.startsWith(\"ERROR\")) {\n      console.error(msg);\n    } else if (msg.startsWith(\"WARNING\")) {\n      console.warn(msg);\n    } else if (msg.startsWith(\"INFO\")) {\n      console.info(msg);\n    } else if (msg.startsWith(\"DEBUG\")) {\n      console.debug(msg);\n    } else {\n      console.log(msg);\n    }\n  };\n  self.__logCallback__ = logCallback;\n  await pyodide.runPythonAsync(`\n      from js import __logCallback__\n\n\n      class JsHandler(logging.Handler):\n          def emit(self, record):\n              msg = self.format(record)\n              __logCallback__(msg)\n\n\n      main_formatter = logging.Formatter(\"%(levelname)s:%(name)s:%(message)s\")\n\n      js_handler = JsHandler()\n      js_handler.setFormatter(main_formatter)\n\n      root_logger = logging.getLogger()\n      root_logger.handlers.clear()\n      root_logger.addHandler(js_handler)\n      root_logger.setLevel(logging.DEBUG)\n\n      streamlit_handler = logging.getLogger(\"streamlit\")\n      streamlit_handler.setLevel(logging.DEBUG)\n  `);\n  console.debug(\"Set the loggers\");\n\n  // postProgressMessage(\n  //   \"Mocking some Streamlit functions for the browser environment.\"\n  // );\n  console.debug(\"Mocking some Streamlit functions\");\n  // Disable caching. See https://github.com/whitphx/stlite/issues/495\n  await pyodide.runPythonAsync(`\n    import streamlit\n\n    def is_cacheable_msg(msg):\n        return False\n\n    streamlit.runtime.runtime.is_cacheable_msg = is_cacheable_msg\n  `);\n  console.debug(\"Mocked some Streamlit functions\");\n\n  if (!disableLoadingToasts) {\n    postProgressMessage(\"🎈 Inflating balloons...\");\n  }\n\n  console.debug(\"Starting the Streamlit server\");\n  // The following Python code is based on streamlit.web.cli.main_run().\n  self.__streamlitFlagOptions__ = {\n    ...streamlitConfig,\n    // \"browser.gatherUsageStats\": true,\n    \"runner.fastReruns\": false, // Fast reruns do not work well with the async script runner of stlite. See https://github.com/whitphx/stlite/pull/550#issuecomment-1505485865.\n  };\n  await pyodide.runPythonAsync(`\n    from stlite_server.bootstrap import load_config_options, prepare\n    from stlite_server.server import Server\n    from js import __streamlitFlagOptions__\n\n    flag_options = __streamlitFlagOptions__.to_py()\n    load_config_options(flag_options)\n\n    main_script_path = \"${entrypoint}\"\n    command_line = None\n    args = []\n\n    prepare(main_script_path, args)\n\n    server = Server(main_script_path, command_line)\n    server.start()\n  `);\n  console.debug(\"Booted up the Streamlit server\");\n\n  console.debug(\"Setting up the HTTP server\");\n  // Pull the http server instance from Python world to JS world and set up it.\n  httpServer = pyodide.globals.get(\"server\").copy();\n  console.debug(\"Set up the HTTP server\");\n\n  ctx.postMessage({\n    type: \"event:loaded\",\n  });\n}\n\nconst pyodideReadyPromise = loadPyodideAndPackages().catch((error) => {\n  ctx.postMessage({\n    type: \"event:error\",\n    data: {\n      error,\n    },\n  });\n  throw error;\n});\n\n/**\n * Process a message sent to the worker.\n *\n * @param event The message event to process\n */\nself.onmessage = async (event: MessageEvent<InMessage>): Promise<void> => {\n  const msg = event.data;\n\n  // Special case for transmitting the initial data\n  if (msg.type === \"initData\") {\n    initDataPromiseDelegate.resolve(msg.data);\n    return;\n  }\n\n  await pyodideReadyPromise;\n\n  const messagePort = event.ports[0];\n\n  try {\n    switch (msg.type) {\n      case \"websocket:connect\": {\n        console.debug(\"websocket:connect\", msg.data);\n\n        const { path } = msg.data;\n\n        httpServer.start_websocket(\n          path,\n          (messageProxy: any, binary: boolean) => {\n            // XXX: Now there is no session mechanism\n\n            if (binary) {\n              const buffer = messageProxy.getBuffer(\"u8\");\n              messageProxy.destroy();\n              const payload = new Uint8ClampedArray(\n                buffer.data.buffer,\n                buffer.data.byteOffset,\n                buffer.data.byteLength\n              );\n              ctx.postMessage({\n                type: \"websocket:message\",\n                data: {\n                  payload: new Uint8Array(payload),\n                },\n              });\n            } else {\n              ctx.postMessage({\n                type: \"websocket:message\",\n                data: {\n                  payload: messageProxy,\n                },\n              });\n            }\n          }\n        );\n\n        messagePort.postMessage({\n          type: \"reply\",\n        });\n        break;\n      }\n      case \"websocket:send\": {\n        console.debug(\"websocket:send\", msg.data);\n\n        const { payload } = msg.data;\n\n        httpServer.receive_websocket_from_js(payload);\n        break;\n      }\n      case \"http:request\": {\n        console.debug(\"http:request\", msg.data);\n\n        const { request } = msg.data;\n\n        const onResponse = (statusCode: number, _headers: any, _body: any) => {\n          const headers = _headers.toJs();\n          const body = _body.toJs();\n          console.debug({ statusCode, headers, body });\n\n          const reply: ReplyMessageHttpResponse = {\n            type: \"http:response\",\n            data: {\n              response: {\n                statusCode,\n                headers,\n                body,\n              },\n            },\n          };\n          messagePort.postMessage(reply);\n        };\n\n        httpServer.receive_http_from_js(\n          request.method,\n          request.path,\n          request.headers,\n          request.body,\n          onResponse\n        );\n        break;\n      }\n      case \"file:write\": {\n        const { path, data: fileData, opts } = msg.data;\n\n        console.debug(`Write a file \"${path}\"`);\n        writeFileWithParents(pyodide, path, fileData, opts);\n        messagePort.postMessage({\n          type: \"reply\",\n        });\n        break;\n      }\n      case \"file:rename\": {\n        const { oldPath, newPath } = msg.data;\n\n        console.debug(`Rename \"${oldPath}\" to ${newPath}`);\n        renameWithParents(pyodide, oldPath, newPath);\n        messagePort.postMessage({\n          type: \"reply\",\n        });\n        break;\n      }\n      case \"file:unlink\": {\n        const { path } = msg.data;\n\n        console.debug(`Remove \"${path}`);\n        pyodide.FS.unlink(path);\n        messagePort.postMessage({\n          type: \"reply\",\n        });\n        break;\n      }\n      case \"install\": {\n        const { requirements } = msg.data;\n\n        const micropip = pyodide.pyimport(\"micropip\");\n\n        console.debug(\"Install the requirements:\", requirements);\n        verifyRequirements(requirements); // Blocks the not allowed wheel URL schemes.\n        await micropip.install\n          .callKwargs(requirements, { keep_going: true })\n          .then(() => {\n            if (requirements.includes(\"matplotlib\")) {\n              return pyodide.runPythonAsync(`\n                from stlite_server.bootstrap import _fix_matplotlib_crash\n                _fix_matplotlib_crash()\n              `);\n            }\n          })\n          .then(() => {\n            console.debug(\"Successfully installed\");\n            messagePort.postMessage({\n              type: \"reply\",\n            });\n          });\n      }\n    }\n  } catch (error) {\n    console.error(error);\n\n    if (!(error instanceof Error)) {\n      throw error;\n    }\n\n    // The `error` object may contain non-serializable properties such as function (for example Pyodide.FS.ErrnoError which has a `.setErrno` function),\n    // so it must be converted to a plain object before sending it to the main thread.\n    // Otherwise, the following error will be thrown:\n    // `Uncaught (in promise) DOMException: Failed to execute 'postMessage' on 'MessagePort': #<Object> could not be cloned.`\n    // Also, the JSON.stringify() and JSON.parse() approach like https://stackoverflow.com/a/42376465/13103190\n    // does not work for Error objects because the Error object is not enumerable.\n    // So we use the following approach to clone the Error object.\n    const cloneableError = new Error(error.message);\n    cloneableError.name = error.name;\n    cloneableError.stack = error.stack;\n\n    messagePort.postMessage({\n      type: \"reply\",\n      error: cloneableError,\n    });\n  }\n};\n\nctx.postMessage({\n  type: \"event:start\",\n});\n","type PromiseImplFn<T> = ConstructorParameters<typeof Promise<T>>[0];\n\nexport class PromiseDelegate<T> {\n  public readonly promise: Promise<T>;\n  private resolveInternal!: Parameters<PromiseImplFn<T>>[0];\n  private rejectInternal!: Parameters<PromiseImplFn<T>>[1];\n\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolveInternal = resolve;\n      this.rejectInternal = reject;\n    });\n  }\n\n  public resolve(value: T): void {\n    this.resolveInternal(value);\n  }\n\n  public reject(reason: unknown): void {\n    this.rejectInternal(reason);\n  }\n}\n"],"names":["assertPath","path","TypeError","JSON","stringify","normalizeStringPosix","allowAboveRoot","code","res","lastSegmentLength","lastSlash","dots","i","length","charCodeAt","lastSlashIndex","lastIndexOf","slice","posix","resolve","cwd","resolvedPath","resolvedAbsolute","arguments","undefined","process","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","dir","root","base","name","_format","parse","ret","delimiter","win32","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","ensureParent","pyodide","filePath","normalized","dirNames","split","chDirNames","dirName","push","dirPath","FS","analyzePath","exists","isDir","Error","concat","mkdir","err","console","error","writeFileWithParents","data","opts","writeFile","verifyRequirements","requirements","forEach","req","url","URL","_a","protocol","mockPyArrow","runPython","httpServer","ctx","self","initDataPromiseDelegate","constructor","this","promise","Promise","reject","resolveInternal","rejectInternal","value","reason","postProgressMessage","message","postMessage","type","DEFAULT_PYODIDE_URL","pyodideReadyPromise","entrypoint","files","archives","wheels","mountedSitePackagesSnapshotFilePath","pyodideUrl","streamlitConfig","disableLoadingToasts","debug","loadPyodideOptions","indexUrl","loadPyodide","endsWith","import","importScripts","assign","indexURL","initPyodide","stdout","log","stderr","all","keys","map","__awaiter","file","fetch","then","arrayBuffer","buffer","Uint8Array","archive","options","unpackArchive","runPythonAsync","loadPackage","micropip","pyimport","install","callKwargs","stliteServer","keep_going","streamlit","__logCallback__","msg","startsWith","warn","info","__streamlitFlagOptions__","globals","copy","loadPyodideAndPackages","catch","onmessage","event","messagePort","ports","start_websocket","messageProxy","binary","getBuffer","destroy","payload","Uint8ClampedArray","byteOffset","byteLength","receive_websocket_from_js","request","onResponse","statusCode","_headers","_body","headers","toJs","body","reply","response","receive_http_from_js","method","fileData","oldPath","newPath","rename","renameWithParents","unlink","includes","cloneableError","stack"],"sourceRoot":""}